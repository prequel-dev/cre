rules:
  - metadata:
      kind: prequel
      id: SB2JwtS3cr3tInv4l1dA
      gen: 1
    cre:
      id: CRE-2025-0131
      severity: 1
      title: "Supabase Self-Hosted: JWT Secret Missing or Invalid Configuration"
      category: "authentication"
      author: Prequel
      description: |
        Detects when Supabase self-hosted services fail due to missing, empty, or invalid JWT_SECRET configuration.
        This affects Auth service, REST API, and all authentication-dependent operations. Invalid JWT secrets prevent
        API token validation and break the entire authentication flow.
      cause: |
        - JWT_SECRET environment variable is empty or not set
        - JWT_SECRET is too short (less than 32 characters)
        - JWT_SECRET doesn't match the API keys (ANON_KEY, SERVICE_ROLE_KEY)
        - JWT_SECRET contains invalid characters or format
      tags:
        - supabase
        - authentication
        - jwt
        - configuration
        - security
        - api-key
        - self-hosted
        - public
      mitigation: |
        IMMEDIATE:
          - Set valid JWT_SECRET in .env: `JWT_SECRET=your-super-secret-jwt-token-with-at-least-32-characters-long`
          - Regenerate API keys if JWT_SECRET was changed: Use Supabase CLI or JWT generator
          - Ensure JWT_SECRET matches the secret used to generate ANON_KEY and SERVICE_ROLE_KEY
        VERIFICATION:
          - Test auth endpoint: `curl http://localhost:8000/auth/v1/user`
          - Verify JWT validation: Check service logs for "invalid JWT" errors
        PREVENTION:
          - Use environment variable validation in deployment scripts
          - Store secrets securely (HashiCorp Vault, Kubernetes secrets)
          - Document JWT_SECRET requirements in setup guides
      references:
        - https://supabase.com/docs/guides/self-hosting/docker
        - https://jwt.io/introduction/
        - https://supabase.com/docs/learn/auth-deep-dive/auth-deep-dive-jwts
      applications:
        - name: gotrue
          containerName: supabase-auth
          version: "v2.*"
        - name: postgrest
          containerName: supabase-rest
          version: "v12.*"
      impact: |
        - Complete authentication system failure
        - API requests return 401 Unauthorized
        - Users cannot sign in or access protected resources
        - All client applications lose authentication capability
      impactScore: 10
      mitigationScore: 4
      reports: 25
    rule:
      set:
        window: 5m
        event:
          source: cre.log.supabase
        match:
          - regex: 'invalid JWT.*secret|JWT_SECRET.*empty|JWT.*validation.*failed'
          - regex: 'authentication failed.*JWT|invalid.*token.*signature'
          - regex: 'GOTRUE_JWT_SECRET.*required|JWT secret.*too short'
          - value: "authentication"


