=== REDPANDA TEST LOG - Sun Jun  8 14:53:59 IST 2025 ===
2025-06-08 14:54:08 WARNING: This is a setup for development purposes only; in this mode your clusters may run unrealistically fast and data can be corrupted any time your computer shuts down uncleanly.
2025-06-08 14:54:13 INFO  2025-06-08 09:24:09,133 seastar - Perf-based stall detector creation failed (EACCESS), try setting /proc/sys/kernel/perf_event_paranoid to 1 or less to enable kernel backtraces: falling back to posix timer.
2025-06-08 14:54:14 INFO  2025-06-08 09:24:09,134 cpu_profiler - Perf-based cpu profiler creation failed (EACCESS), try setting /proc/sys/kernel/perf_event_paranoid to 1 or less to enable kernel backtraces: falling back to posix timer.
2025-06-08 14:54:16 INFO  2025-06-08 09:24:09,422 [shard 0:main] cluster - config_manager.cc:510 - Can't load config cache: std::__1::__fs::filesystem::filesystem_error (error system:2, filesystem error: open failed: No such file or directory ["/var/lib/redpanda/data/config_cache.yaml"])
2025-06-08 14:54:17 INFO  2025-06-08 09:24:09,423 [shard 0:main] cluster - config_manager.cc:450 - Can't load config bootstrap file: std::__1::__fs::filesystem::filesystem_error (error system:2, filesystem error: open failed: No such file or directory ["/etc/redpanda/.bootstrap.yaml"])
2025-06-08 14:54:18 INFO  2025-06-08 09:24:09,427 [shard 0:main] main - application.cc:866 - redpanda.abort_index_segment_size:50000	- Capacity (in number of txns) of an abort index segment. Each partition tracks the aborted transaction offset ranges to help service client requests.If the number transactions increase beyond this threshold, they are flushed to disk to easy memory pressure.Then they're loaded on demand. This configuration controls the maximum number of aborted transactions  before they are flushed to disk.
2025-06-08 14:54:18 INFO  2025-06-08 09:24:09,427 [shard 0:main] main - application.cc:866 - redpanda.abort_timed_out_transactions_interval_ms:10000	- Interval, in milliseconds, at which Redpanda looks for inactive transactions and aborts them.
2025-06-08 14:54:42 INFO  2025-06-08 09:24:09,428 [shard 0:main] main - application.cc:866 - redpanda.cloud_storage_recovery_topic_validation_mode:check_manifest_existence	- Validation performed before recovering a topic from object storage. In case of failure, the reason for the failure appears as `ERROR` lines in the Redpanda application log. For each topic, this reports errors for all partitions, but for each partition, only the first error is reported. This property accepts the following parameters: `no_check`: Skips the checks for topic recovery. `check_manifest_existence`:  Runs an existence check on each `partition_manifest`. Fails if there are connection issues to the object storage. `check_manifest_and_segment_metadata`: Downloads the manifest and runs a consistency check, comparing the metadata with the cloud storage objects. The process fails if metadata references any missing cloud storage objects.
2025-06-08 14:54:47 INFO  2025-06-08 09:24:09,428 [shard 0:main] main - application.cc:866 - redpanda.cloud_storage_url_style:{nullopt}	- Specifies the addressing style to use for Amazon S3 requests. This configuration determines how S3 bucket URLs are formatted. You can choose between: `virtual_host`, (for example, `<bucket-name>.s3.amazonaws.com`), `path`, (for example, `s3.amazonaws.com/<bucket-name>`), and `null`. Path style is supported for backward compatibility with legacy systems. When this property is not set or is `null`, the client tries to use `virtual_host` addressing. If the initial request fails, the client automatically tries the `path` style. If neither addressing style works, Redpanda terminates the startup, requiring manual configuration to proceed.
2025-06-08 14:55:16 INFO  2025-06-08 09:24:09,429 [shard 0:main] main - application.cc:866 - redpanda.iceberg_rest_catalog_request_timeout_ms:10000	- Maximum length of time that Redpanda waits for a response from the REST catalog before aborting the request
2025-06-08 14:55:18 INFO  2025-06-08 09:24:09,429 [shard 0:main] main - application.cc:866 - redpanda.id_allocator_batch_size:1000	- The ID allocator allocates messages in batches (each batch is a one log record) and then serves requests from memory without touching the log until the batch is exhausted.
2025-06-08 14:55:38 INFO  2025-06-08 09:24:09,429 [shard 0:main] main - application.cc:866 - redpanda.max_concurrent_producer_ids:18446744073709551615	- Maximum number of the active producers sessions. When the threshold is passed, Redpanda terminates old sessions. When an idle producer corresponding to the terminated session wakes up and produces, its message batches are rejected, and an out of order sequence error is emitted. Consumers don't affect this setting.
2025-06-08 14:55:40 INFO  2025-06-08 09:24:09,429 [shard 0:main] main - application.cc:866 - redpanda.max_transactions_per_coordinator:18446744073709551615	- Specifies the maximum number of active transaction sessions per coordinator. When the threshold is passed Redpanda terminates old sessions. When an idle producer corresponding to the terminated session wakes up and produces, it leads to its batches being rejected with invalid producer epoch or invalid_producer_id_mapping error (depends on the transaction execution phase).
2025-06-08 14:55:41 INFO  2025-06-08 09:24:09,429 [shard 0:main] main - application.cc:866 - redpanda.memory_abort_on_alloc_failure:1	- If `true`, the Redpanda process will terminate immediately when an allocation cannot be satisfied due to memory exhaustion. If false, an exception is thrown.
2025-06-08 14:55:50 INFO  2025-06-08 09:24:09,429 [shard 0:main] main - application.cc:866 - redpanda.raft_heartbeat_disconnect_failures:3	- The number of failed heartbeats after which an unresponsive TCP connection is forcibly closed. To disable forced disconnection, set to 0.
[2025-06-08 14:55:51] ERROR: Redpanda failed to start
2025-06-08 14:56:22 INFO  2025-06-08 09:24:09,431 [shard 0:main] main - application.cc:866 - redpanda.crash_loop_limit:{5}	- A limit on the number of consecutive times a broker can crash within one hour before its crash-tracking logic is reset. This limit prevents a broker from getting stuck in an infinite cycle of crashes. For more information see https://docs.redpanda.com/current/reference/properties/broker-properties/#crash_loop_limit.
2025-06-08 14:56:23 INFO  2025-06-08 09:24:09,431 [shard 0:main] main - application.cc:866 - redpanda.crash_loop_sleep_sec:{nullopt}	- The amount of time the broker sleeps before terminating the process when it reaches the number of consecutive times a broker can crash. For more information, see https://docs.redpanda.com/current/reference/properties/broker-properties/#crash_loop_limit.
2025-06-08 14:56:50 INFO  2025-06-08 09:24:09,434 [shard 0:main] crash_tracker - recorder.cc:71 - Creating crash report directory /var/lib/redpanda/data/crash_reports
2025-06-08 14:56:50 DEBUG 2025-06-08 09:24:09,443 [shard 0:main] crash_tracker - recorder.cc:76 - Successfully created crash report directory /var/lib/redpanda/data/crash_reports
2025-06-08 14:56:51 INFO  2025-06-08 09:24:09,455 [shard 0:main] main - application.cc:580 - Setting abort_on_allocation_failure (abort on OOM): true
2025-06-08 14:56:51 ERROR 2025-06-08 09:24:09,522 [shard 0:main] syschecks - Memory: '134217728' below recommended: '1073741824'
2025-06-08 14:56:52 ERROR 2025-06-08 09:24:09,532 [shard 0:main] syschecks - Path: `/var/lib/redpanda/data' uses other filesystem which is not XFS or ext4. This is a unsupported configuration. You may experience poor performance or instability.
