rules:
  - cre:
      id: CRE-2024-0007
      severity: 0
      title: RabbitMQ Mnesia overloaded recovering persistent queues
      pillar: Infrastructure
      category: resource-exhaustion-cpu
      author: Prequel
      description: |
        The RabbitMQ cluster is processing a large number of persistent mirrored queues at boot. The underlying Erlang process, Mnesia, is overloaded (`** WARNING ** Mnesia is overloaded`).
      cause: |
        There are so many that the underlying Erlang process, Mnesia, is reporting that it is overloaded while recoving these queues on boot. 
      impact: |
        RabbitMQ is unable to process any new messages, which can lead to outages in consumers and producers.
      impactScore: 9
      tags: 
        - high-cpu-usage
      mitigation: |
        - Increase the size of the cluster
        - Increase the Kubernetes CPU limits for the RabbitMQ brokers
        - Consider adjusting mirroring policies to limit the number of mirrored queues
        - Remove high-availability policies from queues where it is not needed
        - Consider using [lazy queues](https://www.rabbitmq.com/docs/lazy-queues) to avoid incurring the costs of writing data to disk 
      mitigationScore: 8
      references:
        - https://groups.google.com/g/rabbitmq-users/search?q=discarding%20message
      applications:
        - name: "rabbitmq"
          version: "3.9.x"
    metadata:
      kind: prequel
      id: 5UD1RZxGC5LJQnVpAkV11A
      gen: 1
    rule:
      sequence:
        window: 30s
        event:
          source: cre.log.rabbitmq
        order:
          - regex: Discarding message(.+)in an old incarnation(.+)of this node
          - value: Mnesia is overloaded
        negate:
          - value: "RabbitMQ is asked to stop"
            anchor: 0
            slide: 30s
          - value: "SIGTERM received - shutting down"
            anchor: 1
            window: 10s
